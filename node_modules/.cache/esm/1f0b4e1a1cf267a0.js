let RTMClient,SLACK_OAUTH_TOKEN,BOT_TEST_CHANNEL,WebClient;_1cf‍.w("@slack/rtm-api",[["RTMClient",["RTMClient"],function(v){RTMClient=v}]]);_1cf‍.w("./constants",[["SLACK_OAUTH_TOKEN",["SLACK_OAUTH_TOKEN"],function(v){SLACK_OAUTH_TOKEN=v}],["BOT_TEST_CHANNEL",["BOT_TEST_CHANNEL"],function(v){BOT_TEST_CHANNEL=v}]]);_1cf‍.w("@slack/web-api",[["WebClient",["WebClient"],function(v){WebClient=v}]]);



const rtm = new RTMClient(SLACK_OAUTH_TOKEN);
const web = new WebClient(SLACK_OAUTH_TOKEN);

rtm.start()
    .catch(_1cf‍.g.console.error);
rtm.on('ready', async () =>{
    console.log('bot started')
    sendMessage(BOT_TEST_CHANNEL, 'Bot is online')
});

rtm.on('slack_event', async (eventType, event) => {
    _1cf‍.g.console.log(eventType)
    _1cf‍.g.console.log(event)
    if(event && event.type === 'message'){
        if(event.text === 'Parrot'){
            hello(event.channel, event.user)
        }
        if(event.text === 'Command List'){
            list(event.channel)
        }
        if(event.text === 'I want to rest'){
            rest(event.channel, event.user)
        }
    }
})
// Add more function to the bot in the future.
function hello(channelId,userId){
    sendMessage(channelId, `Hello! <@${userId}>`)
}
function list(channelId){
    sendMessage(channelId, '1. Parrot\n2. Command List\n3. I want to rest')
}
function rest(channelId,userId){
    sendMessage(channelId, `Go to work! <@${userId}> you CODE MONKEY!`)
}
async function sendMessage(channel, message){
    await web.chat.postMessage({
        channel: channel,
        text: message,
    });
}
